// <auto-generated />
using System;
using CreativeCookies.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreativeCookies.Data.Migrations
{
    [DbContext(typeof(PostsContext))]
    [Migration("20200510130126_adding-access-enum")]
    partial class addingaccessenum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CreativeCookies.Domain.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VideoAccess")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c93cf79d-552c-4083-9059-2ae9755e36f4"),
                            Content = "First seeded Post's content",
                            Description = "First seeded Post's description",
                            PublicationDate = new DateTime(2020, 5, 10, 15, 1, 25, 683, DateTimeKind.Local).AddTicks(2663),
                            Title = "First",
                            VideoAccess = 1,
                            VideoUrl = "https://youtu.be/kmXUd6VLdj8"
                        },
                        new
                        {
                            Id = new Guid("854a4222-bd34-4342-80f7-42779f5b3879"),
                            Content = "And this is second post",
                            Description = "The description of second post",
                            PublicationDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Title = "Second",
                            VideoAccess = 0,
                            VideoUrl = "https://youtu.be/kmXUd6VLdj8"
                        },
                        new
                        {
                            Id = new Guid("248fa551-8493-4bbf-9e09-2dc86ec7be62"),
                            Content = "And this is the third post",
                            Description = "It's description",
                            PublicationDate = new DateTime(2020, 5, 13, 3, 1, 25, 687, DateTimeKind.Local).AddTicks(5322),
                            Title = "Third",
                            VideoAccess = 0,
                            VideoUrl = "https://youtu.be/kmXUd6VLdj8"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
