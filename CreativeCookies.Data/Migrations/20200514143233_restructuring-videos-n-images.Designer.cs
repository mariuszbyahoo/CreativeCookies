// <auto-generated />
using System;
using CreativeCookies.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreativeCookies.Data.Migrations
{
    [DbContext(typeof(PostsContext))]
    [Migration("20200514143233_restructuring-videos-n-images")]
    partial class restructuringvideosnimages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CreativeCookies.Domain.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dabcc37d-ab49-4091-83f2-87bdad1c1e44"),
                            Content = "First seeded Post's content",
                            Description = "First seeded Post's description",
                            PublicationDate = new DateTime(2020, 5, 14, 16, 32, 32, 497, DateTimeKind.Local).AddTicks(9883),
                            Title = "First",
                            imageUrl = "assets/images/first.jpg",
                            videoUrl = "https://www.youtube.com/embed/TGJiUNtOReI"
                        },
                        new
                        {
                            Id = new Guid("d45eb84e-73c5-4ce9-a6bc-d0f0dcc80bec"),
                            Content = "And this is second post",
                            Description = "The description of second post",
                            PublicationDate = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Title = "Second",
                            imageUrl = "assets/images/second.jpg",
                            videoUrl = "https://www.youtube.com/embed/TGJiUNtOReI"
                        },
                        new
                        {
                            Id = new Guid("e7b5dd9c-0f1a-4a10-b6b6-87a7e7013590"),
                            Content = "And this is the third post",
                            Description = "It's description",
                            PublicationDate = new DateTime(2020, 5, 17, 4, 32, 32, 503, DateTimeKind.Local).AddTicks(7683),
                            Title = "Third",
                            imageUrl = "assets/images/third.jpg",
                            videoUrl = "https://www.youtube.com/embed/TGJiUNtOReI"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
